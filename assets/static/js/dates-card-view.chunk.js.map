{"version":3,"file":"static/js/dates-card-view.chunk.js","sources":["/var/www/dev.test/wp-content/plugins/barista/domains/eventEditor/src/ui/datetimes/DateRegistrationsLink.tsx","/var/www/dev.test/wp-content/plugins/barista/domains/eventEditor/src/ui/datetimes/datesList/actionsMenu/DateActionsMenu.tsx","/var/www/dev.test/wp-content/plugins/barista/domains/eventEditor/src/ui/datetimes/datesList/cardView/CardView.tsx","/var/www/dev.test/wp-content/plugins/barista/domains/eventEditor/src/ui/datetimes/datesList/cardView/DateCapacity.tsx","/var/www/dev.test/wp-content/plugins/barista/domains/eventEditor/src/ui/datetimes/datesList/cardView/DateCard.tsx","/var/www/dev.test/wp-content/plugins/barista/domains/eventEditor/src/ui/datetimes/datesList/cardView/DateCardSidebar.tsx","/var/www/dev.test/wp-content/plugins/barista/domains/eventEditor/src/ui/datetimes/datesList/cardView/DateDetailsPanel.tsx","/var/www/dev.test/wp-content/plugins/barista/domains/eventEditor/src/ui/datetimes/datesList/cardView/Details.tsx","/var/www/dev.test/wp-content/plugins/barista/domains/eventEditor/src/ui/datetimes/datesList/editable/EditableName.tsx","/var/www/dev.test/wp-content/plugins/barista/domains/eventEditor/src/ui/datetimes/datesList/editable/index.ts","/var/www/dev.test/wp-content/plugins/barista/domains/eventEditor/src/ui/datetimes/hooks/useDateCardDetailsItems.ts","/var/www/dev.test/wp-content/plugins/barista/domains/eventEditor/src/ui/datetimes/hooks/useDatesActionMenuItems.ts"],"sourcesContent":["import React from 'react';\n\nimport { __ } from '@eventespresso/i18n';\nimport { RegistrationsLink } from '@eventespresso/components';\nimport { useRegistrationsLink } from '@eventespresso/edtr-services';\nimport type { Datetime } from '@eventespresso/edtr-services';\n\ninterface Props {\n\tdatetime: Datetime;\n}\n\nconst tooltipProps = { placement: 'top' as const };\n\nconst DateRegistrationsLink: React.FC<Props> = ({ datetime }) => {\n\tconst regListUrl = useRegistrationsLink({ datetime_id: datetime.dbId });\n\n\tconst tooltip = __('view ALL registrations for this date.');\n\n\treturn <RegistrationsLink href={regListUrl} tooltip={tooltip} tooltipProps={tooltipProps} />;\n};\n\nexport default DateRegistrationsLink;\n","import React from 'react';\n\nimport type { ActionsMenuComponentProps } from '@eventespresso/registry';\nimport { EntityActionsMenu } from '@eventespresso/components';\nimport useDatesActionMenuItems from '../../hooks/useDatesActionMenuItems';\nimport { Datetime } from '@eventespresso/edtr-services';\n\nconst DateActionsMenu: React.FC<ActionsMenuComponentProps<Datetime>> = ({ entity, ...props }) => {\n\tconst menuItems = useDatesActionMenuItems(entity);\n\n\treturn <EntityActionsMenu {...props} menuItems={menuItems} />;\n};\n\nexport default DateActionsMenu;\n","import React from 'react';\n\nimport { EntityCardList } from '@eventespresso/components';\nimport { useFilteredDateIds } from '@eventespresso/edtr-services';\n\nimport DateCard from './DateCard';\n\nconst CardView: React.FC = () => {\n\tconst filteredDateIds = useFilteredDateIds();\n\n\treturn <EntityCardList EntityCard={DateCard} entityIds={filteredDateIds} />;\n};\n\nexport default CardView;\n","import React, { useCallback } from 'react';\nimport { __ } from '@eventespresso/i18n';\n\nimport { parseInfinity } from '@eventespresso/utils';\nimport { InlineEditInfinity, TextProps } from '@eventespresso/components';\nimport {\n\tuseDatetimeMutator,\n\tuseUpdateRelatedTickets,\n\tuseTicketQuantityForCapacity,\n} from '@eventespresso/edtr-services';\nimport type { DateItemProps } from '../types';\n\nconst DateCapacity: React.FC<DateItemProps> = ({ entity: datetime }) => {\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst updateRelatedTickets = useUpdateRelatedTickets(datetime.id);\n\tconst ticketQuantityForCapacity = useTicketQuantityForCapacity();\n\n\tconst onChange: TextProps['onChange'] = useCallback(\n\t\t(cap) => {\n\t\t\tconst capacity = parseInfinity(cap);\n\t\t\tif (capacity !== datetime.capacity) {\n\t\t\t\tupdateEntity({ capacity });\n\n\t\t\t\tconst inputGenerator = ticketQuantityForCapacity(capacity);\n\t\t\t\tupdateRelatedTickets(inputGenerator);\n\t\t\t}\n\t\t},\n\t\t[datetime.capacity, updateEntity, ticketQuantityForCapacity, updateRelatedTickets]\n\t);\n\n\treturn (\n\t\t<InlineEditInfinity\n\t\t\tonChange={onChange}\n\t\t\ttooltip={__('edit capacity (registration limit)â€¦')}\n\t\t\tvalue={`${datetime.capacity}`}\n\t\t/>\n\t);\n};\n\nexport default DateCapacity;\n","import React from 'react';\n\nimport DateActionsMenu from '../actionsMenu/DateActionsMenu';\nimport { EntityActionsMenuLayout } from '@eventespresso/components';\nimport { datetimeStatusBgColorClassName } from '@eventespresso/helpers';\nimport { EntityCard } from '@eventespresso/components';\nimport { useDatetimeItem } from '@eventespresso/edtr-services';\nimport DateCardSidebar from './DateCardSidebar';\nimport Details from './Details';\nimport type { DateItemProps } from '../types';\n\nconst DateCard: React.FC<DateItemProps> = ({ id }) => {\n\tconst date = useDatetimeItem({ id });\n\tconst bgClassName = datetimeStatusBgColorClassName(date);\n\n\treturn date ? (\n\t\t<EntityCard\n\t\t\tactionsMenu={<DateActionsMenu entity={date} layout={EntityActionsMenuLayout.Vertical} />}\n\t\t\tdetails={<Details entity={date} />}\n\t\t\tentity={date}\n\t\t\tsidebar={<DateCardSidebar entity={date} />}\n\t\t\tsidebarClass={bgClassName}\n\t\t/>\n\t) : null;\n};\n\nexport default DateCard;\n","import React, { useCallback } from 'react';\nimport { __ } from '@eventespresso/i18n';\n\nimport { CalendarDateSwitcher, EditDateRangeButton } from '@eventespresso/components';\nimport { getDatetimeStatusTextLabel } from '@eventespresso/helpers';\nimport { useDatesListFilterState } from '@eventespresso/edtr-services';\nimport { useDatetimeMutator } from '@eventespresso/edtr-services';\nimport { useTimeZoneTime } from '@eventespresso/services';\nimport type { DateRange } from '@eventespresso/dates';\nimport type { DateItemProps } from '../types';\n\nconst DateCardSidebar: React.FC<DateItemProps> = ({ entity: date }) => {\n\tconst { displayStartOrEndDate } = useDatesListFilterState();\n\tconst { updateEntity } = useDatetimeMutator(date.id);\n\tconst { siteTimeToUtc } = useTimeZoneTime();\n\n\tconst onEditHandler = useCallback(\n\t\t([start, end]: DateRange): void => {\n\t\t\t// convert start & end dates to proper UTC \"startDate\" and \"endDate\"\n\t\t\tconst startDate = siteTimeToUtc(start).toISOString();\n\t\t\tconst endDate = siteTimeToUtc(end).toISOString();\n\t\t\tupdateEntity({ startDate, endDate });\n\t\t},\n\t\t[siteTimeToUtc, updateEntity]\n\t);\n\tconst statusText = getDatetimeStatusTextLabel(date);\n\n\treturn date ? (\n\t\t<>\n\t\t\t<CalendarDateSwitcher\n\t\t\t\tdisplayDate={displayStartOrEndDate}\n\t\t\t\tendDate={date.endDate}\n\t\t\t\tstartDate={date.startDate}\n\t\t\t/>\n\t\t\t<EditDateRangeButton\n\t\t\t\tendDate={date.endDate}\n\t\t\t\theader={__('Edit Event Date')}\n\t\t\t\tonEditHandler={onEditHandler}\n\t\t\t\tstartDate={date.startDate}\n\t\t\t\ttooltip={__('edit start and end dates')}\n\t\t\t/>\n\t\t\t<div className={'ee-ticket-status-label'}>{statusText}</div>\n\t\t</>\n\t) : null;\n};\n\nexport default DateCardSidebar;\n","import React, { useMemo } from 'react';\nimport { __ } from '@eventespresso/i18n';\n\nimport { EntityDetailsPanel, EntityDetailsPanelSold } from '@eventespresso/components';\nimport DateRegistrationsLink from '../../DateRegistrationsLink';\nimport DateCapacity from './DateCapacity';\nimport type { DateItemProps } from '../types';\n\nconst DateDetailsPanel: React.FC<DateItemProps> = ({ adminUrl, entity: datetime, eventId }) => {\n\tconst details = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tid: 'ee-event-date-sold',\n\t\t\t\tlabel: __('sold'),\n\t\t\t\tvalue: (\n\t\t\t\t\t<EntityDetailsPanelSold\n\t\t\t\t\t\tadminUrl={adminUrl}\n\t\t\t\t\t\tdbId={datetime.dbId}\n\t\t\t\t\t\teventId={eventId}\n\t\t\t\t\t\tsold={datetime.sold}\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'ee-event-date-capacity',\n\t\t\t\tlabel: __('capacity'),\n\t\t\t\tvalue: <DateCapacity entity={datetime} />,\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'ee-event-date-registrations',\n\t\t\t\tclassName: 'ee-has-tooltip',\n\t\t\t\tlabel: __('reg list'),\n\t\t\t\tvalue: <DateRegistrationsLink datetime={datetime} />,\n\t\t\t},\n\t\t],\n\t\t[adminUrl, datetime, eventId]\n\t);\n\n\treturn <EntityDetailsPanel details={details} className='ee-editor-date-details-sold-rsrvd-cap-div' />;\n};\n\nexport default DateDetailsPanel;\n","import React, { useCallback, useMemo } from 'react';\nimport { __ } from '@eventespresso/i18n';\n\nimport { ADMIN_ROUTES } from '@eventespresso/constants';\nimport { SimpleTextEditorModal } from '@eventespresso/components';\nimport { useConfig } from '@eventespresso/services';\nimport { getAdminUrl, useDatetimeMutator, useEventId } from '@eventespresso/edtr-services';\n\nimport DateDetailsPanel from './DateDetailsPanel';\n\nimport { EditableName } from '../editable';\nimport useDateCardDetailsItems from '../../hooks/useDateCardDetailsItems';\n\nimport type { DateItemProps } from '../types';\n\nconst Details: React.FC<DateItemProps> = ({ entity: datetime }) => {\n\tconst { siteUrl } = useConfig();\n\n\tconst adminUrl = useMemo(() => {\n\t\treturn getAdminUrl({ adminSiteUrl: siteUrl.admin, page: ADMIN_ROUTES.REGISTRATIONS });\n\t}, [siteUrl.admin]);\n\n\tconst eventId = useEventId();\n\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst onUpdate = useCallback(\n\t\t(description: string): void => {\n\t\t\tupdateEntity({ description });\n\t\t},\n\t\t[updateEntity]\n\t);\n\n\tconst detailsItems = useDateCardDetailsItems(datetime.id);\n\n\treturn (\n\t\t<>\n\t\t\t<EditableName className='entity-card-details__name' entity={datetime} />\n\n\t\t\t<SimpleTextEditorModal\n\t\t\t\tclassName='entity-card-details__text'\n\t\t\t\tonUpdate={onUpdate}\n\t\t\t\ttext={datetime.description}\n\t\t\t\ttitle={__('Edit description')}\n\t\t\t\ttooltip={__('edit descriptionâ€¦')}\n\t\t\t/>\n\n\t\t\t{detailsItems}\n\n\t\t\t<DateDetailsPanel adminUrl={adminUrl} entity={datetime} eventId={eventId} />\n\t\t</>\n\t);\n};\n\nexport default Details;\n","import React, { useCallback } from 'react';\n\nimport { __ } from '@eventespresso/i18n';\nimport { useDatetimeMutator } from '@eventespresso/edtr-services';\nimport { InlineEditText } from '@eventespresso/components';\n\nimport type { DateItemProps } from '../types';\n\ninterface EditableNameProps extends DateItemProps {\n\tclassName?: string;\n\tview?: 'card' | 'table';\n}\n\nconst EditableName: React.FC<EditableNameProps> = ({ className, entity: datetime, view = 'card' }) => {\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst tooltip = __('edit titleâ€¦');\n\n\tconst dateName = datetime.name || tooltip;\n\n\tconst lineCount = view === 'card' && 2;\n\n\tconst onChangeName = useCallback(\n\t\t(name: string): void => {\n\t\t\tif (name !== datetime.name) {\n\t\t\t\tupdateEntity({ name });\n\t\t\t}\n\t\t},\n\t\t[datetime.name, updateEntity]\n\t);\n\n\treturn (\n\t\t<InlineEditText\n\t\t\tclassName={className}\n\t\t\tlineCount={lineCount}\n\t\t\tonChange={onChangeName}\n\t\t\ttag={view === 'table' ? 'div' : 'h4'}\n\t\t\ttooltip={tooltip}\n\t\t\tvalue={dateName}\n\t\t/>\n\t);\n};\n\nexport default EditableName;\n","export { default as EditableName } from './EditableName';\n","import React from 'react';\n\nimport type { EntityId } from '@eventespresso/data';\nimport { useEntityCardDetailsItems } from '@edtrHooks/index';\n\nconst useDateCardDetailsItems = (datetimeId: EntityId): Array<React.ReactNode> => {\n\treturn useEntityCardDetailsItems('datetime', datetimeId);\n};\n\nexport default useDateCardDetailsItems;\n","import React from 'react';\n\nimport type { Datetime } from '@eventespresso/edtr-services';\nimport { useEntityActionsMenuItems } from '@edtrHooks/index';\n\nconst useDatesActionMenuItems = (datetime: Datetime): Array<React.ReactNode> => {\n\treturn useEntityActionsMenuItems('datetime', datetime);\n};\n\nexport default useDatesActionMenuItems;\n"],"mappings":"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","sourceRoot":""}