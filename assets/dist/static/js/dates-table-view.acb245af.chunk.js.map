{"version":3,"sources":["domain/eventEditor/ui/datetimes/DateRegistrationsLink.tsx","domain/eventEditor/ui/datetimes/datesList/cardView/DateCapacity.tsx","domain/eventEditor/ui/datetimes/datesList/editable/EditableDesc.tsx","domain/eventEditor/ui/datetimes/datesList/editable/EditableName.tsx","domain/eventEditor/ui/datetimes/hooks/useDatesActionMenuItems.ts","domain/eventEditor/ui/datetimes/datesList/actionsMenu/DateActionsMenu.tsx","domain/eventEditor/ui/datetimes/datesList/tableView/useHeaderRowGenerator.tsx","domain/eventEditor/ui/datetimes/datesList/tableView/useBodyRowGenerator.tsx","domain/eventEditor/ui/datetimes/datesList/tableView/TableView.tsx"],"names":["DateRegistrationsLink","datetime","admin","useConfig","siteUrl","adminUrl","getAdminUrl","adminSiteUrl","page","ADMIN_ROUTES","REGISTRATIONS","eventId","useEventId","regListUrl","addQueryArgs","event_id","datetime_id","dbId","return","tooltip","__","tooltipProps","useMemoStringify","placement","href","React","memo","getPropsAreEqual","DateCapacity","entity","updateEntity","useDatetimeMutator","id","updateRelatedTickets","useUpdateRelatedTickets","ticketQuantityForCapacity","useTicketQuantityForCapacity","onChange","useCallback","cap","capacity","parseInfinity","inputGenerator","cacheId","onChangeValue","value","EditableDesc","className","onChangeDesc","description","dateDesc","EditableName","view","dateName","name","onChangeName","fitText","tag","useDatesActionMenuItems","useEntityActionsMenuItems","DateActionsMenu","props","menuItems","useHeaderRowGenerator","filterState","displayStartOrEndDate","cells","key","type","filter","filterCellByStartOrEndDate","primary","addZebraStripes","addZebraStripesOnMobile","useBodyRowGenerator","sortingEnabled","bgClassName","getBackgroundColorClassName","shortenGuid","statusClassName","status","cellsData","format","Date","startDate","ENTITY_LIST_DATE_TIME_FORMAT","endDate","sold","filterCells","TableView","useDatesListContext","filteredEntities","sortDates","useReorderDatetimes","sortResponder","bodyRowGenerator","headerRowGenerator","entities","tableId","tableCaption","onSort"],"mappings":"kIAAA,gGAkBMA,EAAyC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAErCC,EACRC,cADHC,QAAWF,MAENG,EAAWC,YAAY,CAAEC,aAAcL,EAAOM,KAAMC,IAAaC,gBACjEC,EAAUC,cACVC,EAAaC,uBAAaT,EAAU,CACzCU,SAAUJ,EACVK,YAAaf,EAASgB,KACtBC,OAAQ,SAEHC,EAAUC,aAAG,qCACbC,EAAeC,YAA+B,CAAEC,UAAW,QAEjE,OAAO,kBAAC,oBAAD,CAAmBC,KAAOX,EAAaM,QAAUA,EAAUE,aAAeA,KAGnEI,QAAMC,KAAK1B,EAAuB2B,YAAiB,CAAC,WAAY,c,iCCnC/E,8DAaMC,EAAwC,SAAC,GAA0B,IAAhB3B,EAAe,EAAvB4B,OACxCC,EAAiBC,6BAAmB9B,EAAS+B,IAA7CF,aAEFG,EAAuBC,kCAAwBjC,EAAS+B,IACxDG,EAA4BC,yCAE5BC,EAAkCC,uBACvC,SAACC,GACA,IAAMC,EAAWC,YAAcF,GAC/B,GAAIC,IAAavC,EAASuC,SAAU,CACnCV,EAAa,CAAEU,aAEf,IAAME,EAAiBP,EAA0BK,GACjDP,EAAqBS,MAGvB,CAACzC,EAAS0C,QAASR,EAA2BF,EAAsBH,IAGrE,OACC,kBAAC,qBAAD,CACCc,cAAeP,EACfQ,MAAK,UAAK5C,EAASuC,UACnBrB,QAASC,aAAG,gCAKAK,QAAMC,KAAKE,EAAcD,YAAiB,CAAC,a,gLC7BpDmB,EAA4C,SAAC,GAAqC,IAA3B7C,EAA0B,EAAlC4B,OAAkBkB,EAAgB,EAAhBA,UAC9DjB,EAAiBC,6BAAmB9B,EAAS+B,IAA7CF,aAEFkB,EAAeV,uBACpB,SAACW,GACIA,IAAgBhD,EAASgD,aAC5BnB,EAAa,CAAEmB,kBAGjB,CAAChD,EAAS0C,UAGLxB,EAAUC,aAAG,gCAEb8B,EAAWjD,EAASgD,aAAe9B,EAEzC,OAAO,kBAAC,qBAAD,CAAoB4B,UAAWA,EAAWH,cAAeI,EAAc7B,QAASA,EAAS0B,MAAOK,KAGzFzB,MAAMC,KAAKoB,EAAcnB,YAAiB,CAAC,SAAU,iBClB9DwB,EAA4C,SAAC,GAAoD,IAAlDJ,EAAiD,EAAjDA,UAAmB9C,EAA8B,EAAtC4B,OAAsC,IAApBuB,YAAoB,MAAb,OAAa,EAC7FtB,EAAiBC,6BAAmB9B,EAAS+B,IAA7CF,aAEFX,EAAUC,aAAG,0BAEbiC,EAAWpD,EAASqD,MAAQnC,EAE5BoC,EAAejB,uBACpB,SAACgB,GACIA,IAASrD,EAASqD,MACrBxB,EAAa,CAAEwB,WAGjB,CAACrD,EAAS0C,UAGX,OACC,kBAAC,iBAAD,CACCa,QAAkB,SAATJ,EACTK,IAAc,UAATL,EAAmB,IAAM,KAC9BL,UAAWA,EACXH,cAAeW,EACfpC,QAASA,EACT0B,MAAOQ,KAKK5B,MAAMC,KAAKyB,EAAcxB,YAAiB,CAAC,SAAU,W,+EChCrD+B,EAJiB,SAACzD,GAChC,OAAO0D,YAA0B,WAAY1D,I,QCCxC2D,EAAiE,SAAC,GAA0B,IAAxB/B,EAAuB,EAAvBA,OAAWgC,EAAY,0BAC1FC,EAAYJ,EAAwB7B,GAE1C,OAAO,kBAAC,IAAD,iBAAuBgC,EAAvB,CAA8BC,UAAWA,MAGlCrC,QAAMC,KAAKkC,EAAiBjC,YAAiB,CAAC,SAAU,c,2GCiGxDoC,EApGe,WAC7B,OAAOzB,uBAAoC,SAAC0B,GAAiB,IACpDC,EAA0BD,EAA1BC,sBAwFR,MAAO,CACNC,MAvF8B,CAC9B,CACCC,IAAK,SACLC,KAAM,OACNrB,UAAW,gFACXF,MAAO,IAER,CACCsB,IAAK,KACLC,KAAM,OACNrB,UAAW,wFACXF,MAAOzB,aAAG,OAEX,CACC+C,IAAK,OACLC,KAAM,OACNrB,UAAW,yEACXF,MAAOzB,aAAG,SAEX,CACC+C,IAAK,QACLC,KAAM,OACNrB,UAAW,kFACXF,MACC,oCACC,0BAAME,UAAW,8BAA+B3B,aAAG,eACnD,0BAAM2B,UAAW,+BAAgC3B,aAAG,YAIvD,CACC+C,IAAK,MACLC,KAAM,OACNrB,UAAW,2EACXF,MACC,oCACC,0BAAME,UAAW,8BAA+B3B,aAAG,aACnD,0BAAM2B,UAAW,+BAAgC3B,aAAG,UAIvD,CACC+C,IAAK,WACLC,KAAM,OACNrB,UACC,8FACDF,MACC,oCACC,0BAAME,UAAW,8BAA+B3B,aAAG,aACnD,0BAAM2B,UAAW,+BAAgC3B,aAAG,UAIvD,CACC+C,IAAK,OACLC,KAAM,OACNrB,UAAW,0FACXF,MAAOzB,aAAG,SAEX,CACC+C,IAAK,gBACLC,KAAM,OACNrB,UACC,wGACDF,MACC,oCACC,0BAAME,UAAW,8BAA+B3B,aAAG,aACnD,0BAAM2B,UAAW,+BAAgC3B,aAAG,WAIvD,CACC+C,IAAK,UACLC,KAAM,OACNrB,UAAW,uFACXF,MACC,oCACC,0BAAME,UAAW,8BAA+B3B,aAAG,YACnD,0BAAM2B,UAAW,+BAAgC3B,aAAG,eAMhCiD,OAAOC,YAA2BL,IAIzDlB,UAAW,uCACXoB,IAAK,oBACLI,SAAS,EACTH,KAAM,SAEL,K,oHCrFEI,G,OAAkBC,YADR,CAAC,MAAO,SAAU,OAAQ,aA2F3BC,EAxFa,WAC3B,OAAOpC,uBAAkC,YAAwC,IAA7BrC,EAA4B,EAApC4B,OAAkBmC,EAAkB,EAAlBA,YACrDC,EAA0CD,EAA1CC,sBAAuBU,EAAmBX,EAAnBW,eACzBC,EAAcC,YAA4B5E,GAC1C+B,EAAK/B,EAASgB,MAAQ6D,YAAY7E,EAAS+B,IAC3C+C,EAAkBC,YAAO/E,GAEzBuC,EAAW,CAChB2B,IAAK,WACLC,KAAM,OACNrB,UAAW,2FACXF,MAAO8B,EAAiB1E,EAASuC,SAAW,kBAACZ,EAAA,EAAD,CAAcC,OAAQ5B,KAG7DqD,EAAO,CACZa,IAAK,OACLC,KAAM,OACNrB,UACC,mHACDF,MAAO8B,EACN1E,EAASqD,KAET,kBAAC,IAAD,CAAcP,UAAW,0CAA2ClB,OAAQ5B,EAAUmD,KAAM,WAIxF6B,EAAY,CACjB,CACCd,IAAK,SACLC,KAAM,OACNrB,UAAU,kDAAD,OAAoD6B,EAApD,gCACT/B,MAAO,yBAAKE,UAAW,kCAAmC9C,EAASqD,OAEpE,CACCa,IAAK,KACLC,KAAM,OACNrB,UAAW,qFACXF,MAAOb,GAERsB,EACA,CACCa,IAAK,QACLC,KAAM,OACNrB,UAAW,0EACXF,MAAOqC,YAAO,IAAIC,KAAKlF,EAASmF,WAAYC,MAE7C,CACClB,IAAK,MACLC,KAAM,OACNrB,UAAW,wEACXF,MAAOqC,YAAO,IAAIC,KAAKlF,EAASqF,SAAUD,MAE3C7C,EACA,CACC2B,IAAK,OACLC,KAAM,OACNrB,UAAW,uFACXF,MAAO5C,EAASsF,MAAQ,GAEzB,CACCpB,IAAK,gBACLC,KAAM,OACNrB,UACC,qGACDF,MAAO8B,EAAiB,IAAM,kBAAC3E,EAAA,EAAD,CAAuBC,SAAUA,KAEhE,CACCkE,IAAK,UACLC,KAAM,OACNrB,UAAW,0FACXF,MAAO8B,EAAiB,IAAM,kBAACf,EAAA,EAAD,CAAiB/B,OAAQ5B,MAInDuF,EAAc,IAAOlB,YAA2BL,IAItD,MAAO,CACNC,MAHa,IAAKsB,EAAahB,EAAlB,CAAmCS,GAIhDlC,UAAU,gCAAD,OAAkCgC,GAC3C/C,GAAG,gCAAD,OAAkC/B,EAAS+B,IAC7CmC,IAAI,OAAD,OAASlE,EAAS+B,IACrBoC,KAAM,SAEL,K,yBCzEWqB,UAtBa,WAAO,IAAD,EACSC,cAAlC1B,EADyB,EACzBA,YAAa2B,EADY,EACZA,iBAEEC,EAAcC,8BAAoBF,GAAjDG,cAEFC,EAAmBrB,IACnBsB,EAAqBjC,IAE3B,OACC,kBAAC,cAAD,CACCkC,SAAUN,EACV3B,YAAaA,EACb+B,iBAAkBA,EAClBC,mBAAoBA,EACpBjD,UAAW,qCACXmD,QAAQ,2BACRC,aAAc/E,aAAG,eACjBgF,OAAQR","file":"static/js/dates-table-view.acb245af.chunk.js","sourcesContent":["import React from 'react';\nimport { addQueryArgs } from '@wordpress/url';\nimport { __ } from '@wordpress/i18n';\n\nimport { ADMIN_ROUTES } from '@sharedConstants/adminRoutes';\nimport { Datetime } from '@edtrServices/apollo/types';\nimport getAdminUrl from '@sharedServices/utils/url/getAdminUrl';\nimport { getPropsAreEqual } from '@appServices/utilities';\nimport { RegistrationsLink } from '@appLayout/entityList';\nimport useConfig from '@appServices/config/useConfig';\nimport useEventId from '@edtrServices/apollo/queries/events/useEventId';\nimport { useMemoStringify } from '@application/services/hooks';\nimport { TooltipProps } from '@infraUI/display';\n\ninterface Props {\n\tdatetime: Datetime;\n}\n\nconst DateRegistrationsLink: React.FC<Props> = ({ datetime }) => {\n\tconst {\n\t\tsiteUrl: { admin },\n\t} = useConfig();\n\tconst adminUrl = getAdminUrl({ adminSiteUrl: admin, page: ADMIN_ROUTES.REGISTRATIONS });\n\tconst eventId = useEventId();\n\tconst regListUrl = addQueryArgs(adminUrl, {\n\t\tevent_id: eventId,\n\t\tdatetime_id: datetime.dbId,\n\t\treturn: 'edit',\n\t});\n\tconst tooltip = __('view registrations for this date.');\n\tconst tooltipProps = useMemoStringify<TooltipProps>({ placement: 'top' });\n\n\treturn <RegistrationsLink href={ regListUrl } tooltip={ tooltip } tooltipProps={ tooltipProps } />;\n};\n\nexport default React.memo(DateRegistrationsLink, getPropsAreEqual(['datetime', 'cacheId']));\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport parseInfinity from '@appServices/utilities/number/parseInfinity';\nimport { InlineEditInfinity, TextProps } from '@appInputs/InlineEditInput';\nimport {\n\tuseDatetimeMutator,\n\tuseUpdateRelatedTickets,\n\tuseTicketQuantityForCapacity,\n} from '@edtrServices/apollo/mutations';\nimport { getPropsAreEqual } from '@appServices/utilities';\nimport type { DateItemProps } from '../types';\n\nconst DateCapacity: React.FC<DateItemProps> = ({ entity: datetime }) => {\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst updateRelatedTickets = useUpdateRelatedTickets(datetime.id);\n\tconst ticketQuantityForCapacity = useTicketQuantityForCapacity();\n\n\tconst onChange: TextProps['onChange'] = useCallback(\n\t\t(cap) => {\n\t\t\tconst capacity = parseInfinity(cap);\n\t\t\tif (capacity !== datetime.capacity) {\n\t\t\t\tupdateEntity({ capacity });\n\n\t\t\t\tconst inputGenerator = ticketQuantityForCapacity(capacity);\n\t\t\t\tupdateRelatedTickets(inputGenerator);\n\t\t\t}\n\t\t},\n\t\t[datetime.cacheId, ticketQuantityForCapacity, updateRelatedTickets, updateEntity]\n\t);\n\n\treturn (\n\t\t<InlineEditInfinity\n\t\t\tonChangeValue={onChange}\n\t\t\tvalue={`${datetime.capacity}`}\n\t\t\ttooltip={__('Click to edit capacity...')}\n\t\t/>\n\t);\n};\n\nexport default React.memo(DateCapacity, getPropsAreEqual(['entity']));\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport type { DateItemProps } from '../types';\nimport { useDatetimeMutator } from '@edtrServices/apollo/mutations';\nimport { InlineEditTextArea } from '@appInputs/InlineEditInput';\nimport { getPropsAreEqual } from '@appServices/utilities';\n\ninterface EditableDescProps extends DateItemProps {\n\tclassName?: string;\n}\n\nconst EditableDesc: React.FC<EditableDescProps> = ({ entity: datetime, className }) => {\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst onChangeDesc = useCallback(\n\t\t(description: string): void => {\n\t\t\tif (description !== datetime.description) {\n\t\t\t\tupdateEntity({ description });\n\t\t\t}\n\t\t},\n\t\t[datetime.cacheId]\n\t);\n\n\tconst tooltip = __('Click to edit description...');\n\n\tconst dateDesc = datetime.description || tooltip;\n\n\treturn <InlineEditTextArea className={className} onChangeValue={onChangeDesc} tooltip={tooltip} value={dateDesc} />;\n};\n\nexport default React.memo(EditableDesc, getPropsAreEqual(['entity', 'description']));\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport type { DateItemProps } from '../types';\nimport { useDatetimeMutator } from '@edtrServices/apollo/mutations';\nimport { InlineEditText } from '@appInputs/InlineEditInput';\nimport { getPropsAreEqual } from '@appServices/utilities';\n\ninterface EditableNameProps extends DateItemProps {\n\tclassName?: string;\n\tview?: 'card' | 'table';\n}\n\nconst EditableName: React.FC<EditableNameProps> = ({ className, entity: datetime, view = 'card' }) => {\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst tooltip = __('Click to edit title...');\n\n\tconst dateName = datetime.name || tooltip;\n\n\tconst onChangeName = useCallback(\n\t\t(name: string): void => {\n\t\t\tif (name !== datetime.name) {\n\t\t\t\tupdateEntity({ name });\n\t\t\t}\n\t\t},\n\t\t[datetime.cacheId]\n\t);\n\n\treturn (\n\t\t<InlineEditText\n\t\t\tfitText={view === 'card'}\n\t\t\ttag={view === 'table' ? 'p' : 'h4'}\n\t\t\tclassName={className}\n\t\t\tonChangeValue={onChangeName}\n\t\t\ttooltip={tooltip}\n\t\t\tvalue={dateName}\n\t\t/>\n\t);\n};\n\nexport default React.memo(EditableName, getPropsAreEqual(['entity', 'name']));\n","import React from 'react';\n\nimport { Datetime } from '@edtrServices/apollo/types';\nimport { useEntityActionsMenuItems } from '@edtrHooks/index';\n\nconst useDatesActionMenuItems = (datetime: Datetime): Array<React.ReactNode> => {\n\treturn useEntityActionsMenuItems('datetime', datetime);\n};\n\nexport default useDatesActionMenuItems;\n","import React from 'react';\n\nimport { ActionsMenuComponentProps, EntityActionsMenu, EntityActionsMenuLayout } from '@appLayout/entityActionsMenu';\nimport useDatesActionMenuItems from '../../hooks/useDatesActionMenuItems';\nimport { Datetime } from '@edtrServices/apollo/types';\nimport { getPropsAreEqual } from '@appServices/utilities';\n\nconst DateActionsMenu: React.FC<ActionsMenuComponentProps<Datetime>> = ({ entity, ...props }) => {\n\tconst menuItems = useDatesActionMenuItems(entity);\n\n\treturn <EntityActionsMenu {...props} menuItems={menuItems} />;\n};\n\nexport default React.memo(DateActionsMenu, getPropsAreEqual(['entity', 'cacheId']));\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { Cell } from '@appLayout/espressoTable';\nimport { filterCellByStartOrEndDate } from '@sharedServices/filterState';\nimport { HeaderRowGeneratorFn } from '@appLayout/entityList';\nimport { DatetimesFilterStateManager } from '@edtrServices/filterState';\n\ntype DatesTableHeaderRowGen = HeaderRowGeneratorFn<DatetimesFilterStateManager>;\n\nconst useHeaderRowGenerator = (): DatesTableHeaderRowGen => {\n\treturn useCallback<DatesTableHeaderRowGen>((filterState) => {\n\t\tconst { displayStartOrEndDate } = filterState;\n\n\t\tconst cellsData: Array<Cell> = [\n\t\t\t{\n\t\t\t\tkey: 'stripe',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-entity-list-status-stripe ee-rspnsv-table-column-nano',\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'id',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-id ee-number-column ee-rspnsv-table-column-nano',\n\t\t\t\tvalue: __('ID'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'name',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-name ee-rspnsv-table-column-huge',\n\t\t\t\tvalue: __('Name'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'start',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-name-start ee-rspnsv-table-column-default',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Start Date')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Start')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'end',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-end ee-rspnsv-table-column-default',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('End Date')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('End')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'capacity',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-col-hdr ee-date-list-col-capacity ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Capacity')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Cap')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'sold',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-sold ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: __('Sold'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'registrations',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-col-hdr ee-date-list-col-registrations ee-rspnsv-table-column-smaller ee-centered-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Reg list')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Regs')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'actions',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-actions-column ee-rspnsv-table-column-big ee-centered-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Actions')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Actions')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t];\n\n\t\tconst cells = cellsData.filter(filterCellByStartOrEndDate(displayStartOrEndDate));\n\n\t\treturn {\n\t\t\tcells,\n\t\t\tclassName: 'ee-editor-date-list-items-header-row',\n\t\t\tkey: 'dates-list-header',\n\t\t\tprimary: true,\n\t\t\ttype: 'row',\n\t\t};\n\t}, []);\n};\n\nexport default useHeaderRowGenerator;\n","import React, { useCallback } from 'react';\nimport { format } from 'date-fns';\nimport { filter, pipe } from 'ramda';\n\nimport { addZebraStripesOnMobile } from '@appLayout/espressoTable/utils';\nimport DateRegistrationsLink from '@edtrUI/datetimes/DateRegistrationsLink';\nimport DateActionsMenu from '@edtrUI/datetimes/datesList/actionsMenu/DateActionsMenu';\nimport { Datetime } from '@edtrServices/apollo/types';\nimport { filterCellByStartOrEndDate } from '@sharedServices/filterState';\nimport { ENTITY_LIST_DATE_TIME_FORMAT } from '@appConstants/dateFnsFormats';\nimport { getBackgroundColorClassName, status } from '@sharedEntities/datetimes/helpers';\nimport { shortenGuid } from '@appServices/utilities/text';\nimport DateCapacity from '../cardView/DateCapacity';\nimport { BodyRowGeneratorFn } from '@appLayout/entityList';\nimport { DatetimesFilterStateManager } from '@edtrServices/filterState';\nimport { EditableName } from '../editable';\n\nimport '@application/ui/styles/root/entity-status.css';\n\ntype DatesTableBodyRowGen = BodyRowGeneratorFn<Datetime, DatetimesFilterStateManager>;\n\nconst exclude = ['row', 'stripe', 'name', 'actions'];\nconst addZebraStripes = addZebraStripesOnMobile(exclude);\n\nconst useBodyRowGenerator = (): DatesTableBodyRowGen => {\n\treturn useCallback<DatesTableBodyRowGen>(({ entity: datetime, filterState }) => {\n\t\tconst { displayStartOrEndDate, sortingEnabled } = filterState;\n\t\tconst bgClassName = getBackgroundColorClassName(datetime);\n\t\tconst id = datetime.dbId || shortenGuid(datetime.id);\n\t\tconst statusClassName = status(datetime);\n\n\t\tconst capacity = {\n\t\t\tkey: 'capacity',\n\t\t\ttype: 'cell',\n\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-capacity ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\tvalue: sortingEnabled ? datetime.capacity : <DateCapacity entity={datetime} />,\n\t\t};\n\n\t\tconst name = {\n\t\t\tkey: 'name',\n\t\t\ttype: 'cell',\n\t\t\tclassName:\n\t\t\t\t'ee-date-list-cell ee-date-list-col-name ee-col-name ee-rspnsv-table-column-bigger ee-rspnsv-table-hide-on-mobile',\n\t\t\tvalue: sortingEnabled ? (\n\t\t\t\tdatetime.name\n\t\t\t) : (\n\t\t\t\t<EditableName className={'ee-entity-list-text ee-focus-priority-5'} entity={datetime} view={'table'} />\n\t\t\t),\n\t\t};\n\n\t\tconst cellsData = [\n\t\t\t{\n\t\t\t\tkey: 'stripe',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: `ee-date-list-cell ee-entity-list-status-stripe ${bgClassName} ee-rspnsv-table-column-nano`,\n\t\t\t\tvalue: <div className={'ee-rspnsv-table-show-on-mobile'}>{datetime.name}</div>,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'id',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-id ee-rspnsv-table-column-nano ee-number-column',\n\t\t\t\tvalue: id,\n\t\t\t},\n\t\t\tname,\n\t\t\t{\n\t\t\t\tkey: 'start',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-start ee-rspnsv-table-column-default',\n\t\t\t\tvalue: format(new Date(datetime.startDate), ENTITY_LIST_DATE_TIME_FORMAT),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'end',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-end ee-rspnsv-table-column-default',\n\t\t\t\tvalue: format(new Date(datetime.endDate), ENTITY_LIST_DATE_TIME_FORMAT),\n\t\t\t},\n\t\t\tcapacity,\n\t\t\t{\n\t\t\t\tkey: 'sold',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-sold ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: datetime.sold || 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'registrations',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-cell ee-date-list-col-registrations ee-rspnsv-table-column-smaller ee-centered-column',\n\t\t\t\tvalue: sortingEnabled ? '-' : <DateRegistrationsLink datetime={datetime} />,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'actions',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-actions ee-actions-column ee-rspnsv-table-column-big',\n\t\t\t\tvalue: sortingEnabled ? '-' : <DateActionsMenu entity={datetime} />,\n\t\t\t},\n\t\t];\n\n\t\tconst filterCells = filter(filterCellByStartOrEndDate(displayStartOrEndDate));\n\n\t\tconst cells = pipe(filterCells, addZebraStripes)(cellsData);\n\n\t\treturn {\n\t\t\tcells,\n\t\t\tclassName: `ee-editor-date-list-view-row ${statusClassName}`,\n\t\t\tid: `ee-editor-date-list-view-row-${datetime.id}`,\n\t\t\tkey: `row-${datetime.id}`,\n\t\t\ttype: 'row',\n\t\t};\n\t}, []);\n};\n\nexport default useBodyRowGenerator;\n","import React from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { EntityTable } from '@appLayout/entityList';\nimport useHeaderRowGenerator from './useHeaderRowGenerator';\nimport useBodyRowGenerator from './useBodyRowGenerator';\nimport { useDatesListContext } from '@edtrServices/context/EntityListContext';\nimport { useReorderDatetimes } from '@edtrServices/apollo/mutations';\n\nimport './styles.scss';\n\n/**\n * Displays event date details in a standard list table like view\n */\nconst TableView: React.FC = () => {\n\tconst { filterState, filteredEntities } = useDatesListContext();\n\n\tconst { sortResponder: sortDates } = useReorderDatetimes(filteredEntities);\n\n\tconst bodyRowGenerator = useBodyRowGenerator();\n\tconst headerRowGenerator = useHeaderRowGenerator();\n\n\treturn (\n\t\t<EntityTable\n\t\t\tentities={filteredEntities}\n\t\t\tfilterState={filterState}\n\t\t\tbodyRowGenerator={bodyRowGenerator}\n\t\t\theaderRowGenerator={headerRowGenerator}\n\t\t\tclassName={'ee-dates-list-list-view ee-fade-in'}\n\t\t\ttableId='date-entities-table-view'\n\t\t\ttableCaption={__('Event Dates')}\n\t\t\tonSort={sortDates}\n\t\t/>\n\t);\n};\n\nexport default TableView;\n"],"sourceRoot":""}