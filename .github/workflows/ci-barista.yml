name: Build and Test

on:
    # Run this workflow only if the PR is to barista branch
    pull_request:
        branches:
            - barista

jobs:
    php-lint:
        runs-on: ubuntu-latest
        needs: what_has_changed
        # Run only if PHP files have changed
        if: ${{ needs.what_has_changed.outputs.php == 'true' }}
        strategy:
            matrix:
                operating-system: [ubuntu-latest]
                php-versions: ['7.3'] #, '7.4', '8.0', '8.1']
        name: Lint with PHP ${{ matrix.php-versions }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}

            - name: Get composer cache directory
              id: composercache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composercache.outputs.dir }}
                  # Use composer-lock.json for key
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install

            - name: PHP Lint
              run: composer config-eventespressocs && composer run-script lint:skip-warnings
              # Allow failure for PHP > 7.3
              # continue-on-error: ${{ matrix.php-versions != '7.3' }}

    php-unit-tests:
        runs-on: ${{ matrix.operating-system }}
        needs: what_has_changed
        # Run only if PHP files have changed
        if: ${{ needs.what_has_changed.outputs.php == 'true' }}
        strategy:
            matrix:
                operating-system: [ubuntu-latest]
                php-versions: ['7.1', '7.2', '7.3', '7.4']
        name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  tools: phpunit:v7

            - name: Start mysql service
              run: sudo /etc/init.d/mysql start

            - name: Get composer cache directory
              id: composercache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composercache.outputs.dir }}
                  # Use composer.lock for key.
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Check PHP Version
              run: php -v

            - name: Composer install
              run: composer install --optimize-autoloader --prefer-dist

            - name: Install WP Tests
              run: bash tests/bin/install-wp-tests.sh wordpress_test root root localhost latest

            - name: Run PHP Unit Tests
              run: phpunit --configuration phpunit.xml

              # run multisite test only with 1 PHP version
            - if: ${{ matrix.php-versions == '7.4' }}
              name: Run PHP Unit Tests - WP Multisite
              env:
                  WP_MULTISITE: 1
              run: phpunit --configuration phpunit.xml

    # JOB to check if the files in a path have changed
    what_has_changed:
        runs-on: ubuntu-latest
        outputs:
            assets: ${{ steps.filter.outputs.assets }}
            php: ${{ steps.filter.outputs.php }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              # For pull requests it's not necessary to checkout the code
              if: ${{ github.event_name != 'pull_request' }}

            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  base: ${{ github.ref }}
                  filters: |
                      assets:
                        - 'assets/**'
                      php:
                        - '*.php'
